{"version":3,"sources":["../../../projects/ng-social-links/src/lib/ng-social-links.tokens.ts","../../../projects/ng-social-links/src/lib/ng-social-links.constants.ts","../../../projects/ng-social-links/src/lib/ng-social-links.service.ts","../../../projects/ng-social-links/src/lib/ng-social-links.utils.ts","../../../projects/ng-social-links/src/lib/ng-social-links.module.ts"],"names":["DEFAULT_SHARE_URL_CONFIG_TOKEN","InjectionToken","Providers","facebook","twitter","linkedin","mailto","vkontakte","telegram","getpocket","reddit","evernote","pinterest","skype","whatsapp","connectOk","xing","ProfilerUrls","NgSocialLinksService","document","defaultConfig","this","prototype","getShareLink","provider","config","url","title","description","Error","encodeURIComponent","utils.getShareLink","location","origin","Injectable","args","providedIn","Document","decorators","type","Inject","DOCUMENT","NgSocialLinksModule","forRoot","ngModule","providers","provide","useValue","NgModule"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { NgSocialLinksProviderConfig } from './ng-social-links.types';\n\nexport const DEFAULT_SHARE_URL_CONFIG_TOKEN = new InjectionToken<NgSocialLinksProviderConfig>(\n  'ng-default-social-share-config'\n);\n","export class Providers {\n  static readonly facebook = 'fb';\n  static readonly twitter = 'tw';\n  static readonly linkedin = 'in';\n  static readonly mailto = 'mail';\n  static readonly vkontakte = 'vk';\n  static readonly telegram = 'tg';\n  static readonly getpocket = 'pocket';\n  static readonly reddit = 're';\n  static readonly evernote = 'ev';\n  static readonly pinterest = 'pi';\n  static readonly skype = 'sk';\n  static readonly whatsapp = 'wa';\n  static readonly connectOk = 'ok';\n  static readonly xing = 'xi';\n}\n\nexport class ProfilerUrls {\n  static readonly facebook = 'https://www.facebook.com/sharer/sharer.php';\n  static readonly twitter = 'https://twitter.com/intent/tweet';\n  static readonly linkedin = 'https://www.linkedin.com/sharing/share-offsite/';\n  static readonly mailto = 'mailto:';\n  static readonly vkontakte = 'https://vk.com/share.php';\n  static readonly telegram = 'https://t.me/share/url';\n  static readonly getpocket = 'https://getpocket.com/edit';\n  static readonly reddit = 'https://reddit.com/submit/';\n  static readonly evernote = 'https://www.evernote.com/clip.action';\n  static readonly pinterest = 'https://pinterest.com/pin/create/button/';\n  static readonly skype = 'https://web.skype.com/share';\n  static readonly whatsapp = 'whatsapp://send';\n  static readonly connectOk = 'https://connect.ok.ru/dk';\n  static readonly xing = 'https://www.xing.com/app/user';\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { DEFAULT_SHARE_URL_CONFIG_TOKEN } from './ng-social-links.tokens';\nimport {\n  NgSocialLinksProvider,\n  NgSocialLinksProviderConfig as Config\n} from '././ng-social-links.types';\nimport { Providers } from './ng-social-links.constants';\nimport * as utils from './ng-social-links.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgSocialLinksService {\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(DEFAULT_SHARE_URL_CONFIG_TOKEN) private defaultConfig: Config\n  ) {}\n\n  /**\n   * Provides social share URL for a given provider.\n   * Addional configuration parameters depend on a chosen provider.\n   * @param provider Provider name.\n   * @param config Parameters used to build a social share URL.\n   */\n  getShareLink(\n    provider:\n      typeof Providers.facebook  |\n      typeof Providers.reddit    |\n      typeof Providers.connectOk,\n    config?: Pick<Config, 'url'>\n  ): string;\n  getShareLink(\n    provider:\n      typeof Providers.twitter   |\n      typeof Providers.linkedin  |\n      typeof Providers.vkontakte |\n      typeof Providers.telegram  |\n      typeof Providers.getpocket |\n      typeof Providers.evernote  |\n      typeof Providers.pinterest |\n      typeof Providers.skype     |\n      typeof Providers.whatsapp  |\n      typeof Providers.xing,\n    config?: Pick<Config, 'url' | 'title'>\n  ): string;\n  getShareLink(provider: typeof Providers.mailto, config?: Config): string;\n  getShareLink(provider: NgSocialLinksProvider, config?: Partial<Config>): string {\n    const url = config?.url || this.defaultConfig.url || this.document.location.origin;\n    const title = config?.title || this.defaultConfig.title;\n    const description = config?.description || this.defaultConfig.description;\n\n    return utils.getShareLink(provider, { url, title, description });\n  }\n}\n","import {\n  NgSocialLinksProvider,\n  NgSocialLinksProviderConfig as Config\n} from '././ng-social-links.types';\nimport { Providers, ProfilerUrls } from './ng-social-links.constants';\n\n/**\n * Provides social share URL for a given provider.\n * @param provider Provider name.\n * @param config Parameters used to build a social share URL.\n */\nexport function getShareLink(provider: NgSocialLinksProvider, config: Partial<Config>): string {\n  let { url, title, description } = config;\n\n  if (!url) {\n    throw new Error('Mandatory parameter is missing: url.');\n  }\n\n  url = encodeURIComponent(url);\n\n  if (title) {\n    title = encodeURIComponent(title);\n  }\n\n  if (description) {\n    description = encodeURIComponent(description);\n  }\n\n  switch (provider) {\n    case Providers.facebook:\n      return `${ProfilerUrls.facebook}?u=${url}`;\n\n    case Providers.twitter:\n      return `${ProfilerUrls.twitter}?url=${url}` + (title ? `&text=${title}` : '');\n\n    case Providers.linkedin:\n      return `${ProfilerUrls.linkedin}?url=${url}` + (title ? '/&summary=' + title : '');\n\n    case Providers.vkontakte:\n      return `${ProfilerUrls.vkontakte}?url=${url}` + (title ? `&title=${title}` : '');\n\n    case Providers.telegram:\n      return `${ProfilerUrls.telegram}?url=${url}` + (title ? `&text=${title}` : '');\n\n    case Providers.getpocket:\n      return `${ProfilerUrls.getpocket}?url=${url}` + (title ? `&title=${title}` : '');\n\n    case Providers.reddit:\n      return `${ProfilerUrls.reddit}?url=${url}`;\n\n    case Providers.evernote:\n      return `${ProfilerUrls.evernote}?url=${url}` + (title ? `&t=${title}` : '');\n\n    case Providers.pinterest:\n      return `${ProfilerUrls.pinterest}?url=${url}&media=${url}` +\n        (title ? `&description=${title}` : '');\n\n    case Providers.skype:\n      return `${ProfilerUrls.skype}?url=${url}&source=button` + (title ? `&text=${title}` : '');\n\n    case Providers.whatsapp:\n      return `${ProfilerUrls.whatsapp}?text=${url}` + encodeURIComponent(' ') + (title || '');\n\n    case Providers.connectOk:\n      const shareUrlParam = 'st.cmd=WidgetSharePreview&service=odnoklassniki&st.shareUrl';\n\n      return `${ProfilerUrls.connectOk}?${shareUrlParam}=${url}`;\n\n    case Providers.xing:\n      return `${ProfilerUrls.xing}?op=share;url=${url}` + (title ? `;title=${title}` : '');\n\n    case Providers.mailto:\n      return (\n        ProfilerUrls.mailto +\n        (title ? '?subject=' + title : '') +\n        (title ? '&body=' : '?body=') +\n        (description ? description : '') +\n        ' ' +\n        url\n      );\n\n    default:\n      throw new Error(`Unknown social share provider: ${provider}`);\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgSocialLinksService } from './ng-social-links.service';\nimport { DEFAULT_SHARE_URL_CONFIG_TOKEN } from './ng-social-links.tokens';\nimport { NgSocialLinksProviderConfig } from './ng-social-links.types';\n\n@NgModule()\nexport class NgSocialLinksModule {\n  static forRoot(config?: NgSocialLinksProviderConfig): ModuleWithProviders<NgSocialLinksModule> {\n    return {\n      ngModule: NgSocialLinksModule,\n      providers: [\n        NgSocialLinksService,\n        { provide: DEFAULT_SHARE_URL_CONFIG_TOKEN, useValue: config || {} }\n      ]\n    };\n  }\n}\n"]}