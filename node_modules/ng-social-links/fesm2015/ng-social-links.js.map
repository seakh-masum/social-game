{"version":3,"file":"ng-social-links.js","sources":["../../../projects/ng-social-links/src/lib/ng-social-links.tokens.ts","../../../projects/ng-social-links/src/lib/ng-social-links.constants.ts","../../../projects/ng-social-links/src/lib/ng-social-links.utils.ts","../../../projects/ng-social-links/src/lib/ng-social-links.service.ts","../../../projects/ng-social-links/src/lib/ng-social-links.module.ts","../../../projects/ng-social-links/src/public-api.ts","../../../projects/ng-social-links/src/ng-social-links.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { NgSocialLinksProviderConfig } from './ng-social-links.types';\n\nexport const DEFAULT_SHARE_URL_CONFIG_TOKEN = new InjectionToken<NgSocialLinksProviderConfig>(\n  'ng-default-social-share-config'\n);\n","export class Providers {\n  static readonly facebook = 'fb';\n  static readonly twitter = 'tw';\n  static readonly linkedin = 'in';\n  static readonly mailto = 'mail';\n  static readonly vkontakte = 'vk';\n  static readonly telegram = 'tg';\n  static readonly getpocket = 'pocket';\n  static readonly reddit = 're';\n  static readonly evernote = 'ev';\n  static readonly pinterest = 'pi';\n  static readonly skype = 'sk';\n  static readonly whatsapp = 'wa';\n  static readonly connectOk = 'ok';\n  static readonly xing = 'xi';\n}\n\nexport class ProfilerUrls {\n  static readonly facebook = 'https://www.facebook.com/sharer/sharer.php';\n  static readonly twitter = 'https://twitter.com/intent/tweet';\n  static readonly linkedin = 'https://www.linkedin.com/sharing/share-offsite/';\n  static readonly mailto = 'mailto:';\n  static readonly vkontakte = 'https://vk.com/share.php';\n  static readonly telegram = 'https://t.me/share/url';\n  static readonly getpocket = 'https://getpocket.com/edit';\n  static readonly reddit = 'https://reddit.com/submit/';\n  static readonly evernote = 'https://www.evernote.com/clip.action';\n  static readonly pinterest = 'https://pinterest.com/pin/create/button/';\n  static readonly skype = 'https://web.skype.com/share';\n  static readonly whatsapp = 'whatsapp://send';\n  static readonly connectOk = 'https://connect.ok.ru/dk';\n  static readonly xing = 'https://www.xing.com/app/user';\n}\n","import {\n  NgSocialLinksProvider,\n  NgSocialLinksProviderConfig as Config\n} from '././ng-social-links.types';\nimport { Providers, ProfilerUrls } from './ng-social-links.constants';\n\n/**\n * Provides social share URL for a given provider.\n * @param provider Provider name.\n * @param config Parameters used to build a social share URL.\n */\nexport function getShareLink(provider: NgSocialLinksProvider, config: Partial<Config>): string {\n  let { url, title, description } = config;\n\n  if (!url) {\n    throw new Error('Mandatory parameter is missing: url.');\n  }\n\n  url = encodeURIComponent(url);\n\n  if (title) {\n    title = encodeURIComponent(title);\n  }\n\n  if (description) {\n    description = encodeURIComponent(description);\n  }\n\n  switch (provider) {\n    case Providers.facebook:\n      return `${ProfilerUrls.facebook}?u=${url}`;\n\n    case Providers.twitter:\n      return `${ProfilerUrls.twitter}?url=${url}` + (title ? `&text=${title}` : '');\n\n    case Providers.linkedin:\n      return `${ProfilerUrls.linkedin}?url=${url}` + (title ? '/&summary=' + title : '');\n\n    case Providers.vkontakte:\n      return `${ProfilerUrls.vkontakte}?url=${url}` + (title ? `&title=${title}` : '');\n\n    case Providers.telegram:\n      return `${ProfilerUrls.telegram}?url=${url}` + (title ? `&text=${title}` : '');\n\n    case Providers.getpocket:\n      return `${ProfilerUrls.getpocket}?url=${url}` + (title ? `&title=${title}` : '');\n\n    case Providers.reddit:\n      return `${ProfilerUrls.reddit}?url=${url}`;\n\n    case Providers.evernote:\n      return `${ProfilerUrls.evernote}?url=${url}` + (title ? `&t=${title}` : '');\n\n    case Providers.pinterest:\n      return `${ProfilerUrls.pinterest}?url=${url}&media=${url}` +\n        (title ? `&description=${title}` : '');\n\n    case Providers.skype:\n      return `${ProfilerUrls.skype}?url=${url}&source=button` + (title ? `&text=${title}` : '');\n\n    case Providers.whatsapp:\n      return `${ProfilerUrls.whatsapp}?text=${url}` + encodeURIComponent(' ') + (title || '');\n\n    case Providers.connectOk:\n      const shareUrlParam = 'st.cmd=WidgetSharePreview&service=odnoklassniki&st.shareUrl';\n\n      return `${ProfilerUrls.connectOk}?${shareUrlParam}=${url}`;\n\n    case Providers.xing:\n      return `${ProfilerUrls.xing}?op=share;url=${url}` + (title ? `;title=${title}` : '');\n\n    case Providers.mailto:\n      return (\n        ProfilerUrls.mailto +\n        (title ? '?subject=' + title : '') +\n        (title ? '&body=' : '?body=') +\n        (description ? description : '') +\n        ' ' +\n        url\n      );\n\n    default:\n      throw new Error(`Unknown social share provider: ${provider}`);\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { DEFAULT_SHARE_URL_CONFIG_TOKEN } from './ng-social-links.tokens';\nimport {\n  NgSocialLinksProvider,\n  NgSocialLinksProviderConfig as Config\n} from '././ng-social-links.types';\nimport { Providers } from './ng-social-links.constants';\nimport * as utils from './ng-social-links.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgSocialLinksService {\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(DEFAULT_SHARE_URL_CONFIG_TOKEN) private defaultConfig: Config\n  ) {}\n\n  /**\n   * Provides social share URL for a given provider.\n   * Addional configuration parameters depend on a chosen provider.\n   * @param provider Provider name.\n   * @param config Parameters used to build a social share URL.\n   */\n  getShareLink(\n    provider:\n      typeof Providers.facebook  |\n      typeof Providers.reddit    |\n      typeof Providers.connectOk,\n    config?: Pick<Config, 'url'>\n  ): string;\n  getShareLink(\n    provider:\n      typeof Providers.twitter   |\n      typeof Providers.linkedin  |\n      typeof Providers.vkontakte |\n      typeof Providers.telegram  |\n      typeof Providers.getpocket |\n      typeof Providers.evernote  |\n      typeof Providers.pinterest |\n      typeof Providers.skype     |\n      typeof Providers.whatsapp  |\n      typeof Providers.xing,\n    config?: Pick<Config, 'url' | 'title'>\n  ): string;\n  getShareLink(provider: typeof Providers.mailto, config?: Config): string;\n  getShareLink(provider: NgSocialLinksProvider, config?: Partial<Config>): string {\n    const url = config?.url || this.defaultConfig.url || this.document.location.origin;\n    const title = config?.title || this.defaultConfig.title;\n    const description = config?.description || this.defaultConfig.description;\n\n    return utils.getShareLink(provider, { url, title, description });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgSocialLinksService } from './ng-social-links.service';\nimport { DEFAULT_SHARE_URL_CONFIG_TOKEN } from './ng-social-links.tokens';\nimport { NgSocialLinksProviderConfig } from './ng-social-links.types';\n\n@NgModule()\nexport class NgSocialLinksModule {\n  static forRoot(config?: NgSocialLinksProviderConfig): ModuleWithProviders<NgSocialLinksModule> {\n    return {\n      ngModule: NgSocialLinksModule,\n      providers: [\n        NgSocialLinksService,\n        { provide: DEFAULT_SHARE_URL_CONFIG_TOKEN, useValue: config || {} }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ng-social-links\n */\n\nexport * from './lib/ng-social-links.module';\nexport * from './lib/ng-social-links.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DEFAULT_SHARE_URL_CONFIG_TOKEN as ɵa} from './lib/ng-social-links.tokens';\nexport {NgSocialLinksProviderConfig as ɵb} from './lib/ng-social-links.types';"],"names":["utils.getShareLink"],"mappings":"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"}